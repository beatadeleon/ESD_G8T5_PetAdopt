{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Welcome to PetAdopt\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Login\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Go to Dashboard\", -1 /* HOISTED */);\nexport function render(_ctx, _cache) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _ctx.isUser ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, [_createTextVNode(\" Adopt a pet today! \"), _createVNode(_component_router_link, {\n    to: \"/dashboard\"\n  }, {\n    default: _withCtx(() => [_hoisted_3]),\n    _: 1 /* STABLE */\n  })])) : (_openBlock(), _createBlock(_component_router_link, {\n    key: 1,\n    to: \"/auth/login\"\n  }, {\n    default: _withCtx(() => [_hoisted_4]),\n    _: 1 /* STABLE */\n  }))]);\n}","map":{"version":3,"names":["_createElementVNode","key","_createElementBlock","_hoisted_1","_ctx","isUser","_hoisted_2","_createTextVNode","_createVNode","_component_router_link","to","default","_withCtx","_hoisted_3","_","_createBlock","_hoisted_4"],"sources":["/Users/junyi/Documents/petadopt/src/home.vue"],"sourcesContent":["<script setup>\nimport { useRouter } from 'vue-router'\nimport { auth, database } from './firebaseConfig'; // Import auth from firebaseConfig\nimport { ref, get } from 'firebase/database';\n\n\nconst store = useStore()\nconst router = useRouter()\n\nauth.onAuthStateChanged((user) => {\n  store.dispatch('fetchUser', user)\n})\n\nconst user = computed(() => {\n  return store.getters.user\n})\n\n</script>\n\n<template>\n  <div>\n    <h1>Welcome to PetAdopt</h1>\n    <p v-if=\"isUser\">\n      Adopt a pet today!\n      <router-link to=\"/dashboard\">\n        <button>Login</button>\n      </router-link>\n    </p>\n    <router-link v-else to=\"/auth/login\">\n      <button>Go to Dashboard</button>\n    </router-link>\n  </div>\n</template>\n\n\n<script>\n  import { auth, database } from '../firebaseConfig';\n  import { ref, get, update } from 'firebase/database';\n \n\n  export default {\n    name: 'HomeComponent',\n    data() {\n        return {\n          userRole: null,\n          homeApprovedDeliveries: []\n        };\n    },\n  mounted() {\n        this.fetchUserRole();\n    },\n    computed: {\n        isDeliveryDriver() {\n            return this.userRole === 'driver';\n        },\n        isUser() {\n            return this.userRole === 'user';\n        },\n        isFoodBank() {\n            return this.userRole === 'foodBank';\n        },\n\n    },\n    methods: {\n        fetchUserRole() {\n            auth.onAuthStateChanged((user) => {\n                const userRef = ref(database, `users/${user.uid}/role`);\n                get(userRef)\n                    .then((snapshot) => {\n                    this.userRole = snapshot.val();\n                    //console.log(\"User Role from Database:\", this.userRole);\n                })\n                    .catch((error) => {\n                    //console.error(\"Error fetching user role:\", error);\n                });\n            });\n        },\n        handleApprovedDeliveries(updatedDeliveries) {\n          // Now you have the updated deliveries here\n          // You can set them to a data property or process them as needed\n          this.homeApprovedDeliveries = updatedDeliveries;\n          //console.log(this.homeApprovedDeliveries)\n        },\n        updateStatus(donation) {\n          const index = this.homeApprovedDeliveries.findIndex(d => d.id === donation.id);\n          if (index !== -1) {\n            // Remove the donation from confirmedDonations\n            this.homeApprovedDeliveries.splice(index, 1);\n          }\n          const groupId = donation.groupId; // Extract the group ID from the donation object\n          const donationKey = donation['.key']; // Extract the donation key\n          const path = `groupDonationsMeta/${groupId}/${donationKey}`;\n\n          const donationRef = ref(database, path);\n          const updates = {\n            status: 'approved' // The new status passed to the function\n          };\n\n          update(donationRef, updates)\n            .then(() => {\n              toast.success(\"Donation accepted!\", { timeout: 3000 });\n              console.log(`Donation status updated to approved successfully!`);\n            })\n            .catch((error) => {\n              //console.error(`An error occurred when updating the donation status to 'approved': `, error);\n            });\n        },\n    },\n    components: { acceptCard },\n\n    \n\n}\n</script>"],"mappings":";gCAqBIA,mBAAA,CAA4B,YAAxB,qBAAmB;;EArB3BC,GAAA;AAAA;gCAyBQD,mBAAA,CAAsB,gBAAd,OAAK;gCAIfA,mBAAA,CAAgC,gBAAxB,iBAAe;;;uBAT3BE,mBAAA,CAWM,cAVJC,UAA4B,EACnBC,IAAA,CAAAC,MAAM,I,cAAfH,mBAAA,CAKI,KA3BRI,UAAA,GAAAC,gBAAA,CAsBqB,sBAEf,GAAAC,YAAA,CAEcC,sBAAA;IAFDC,EAAE,EAAC;EAAY;IAxBlCC,OAAA,EAAAC,QAAA,CAyBQ,MAAsB,CAAtBC,UAAsB,C;IAzB9BC,CAAA;yBA4BIC,YAAA,CAEcN,sBAAA;IA9BlBR,GAAA;IA4BwBS,EAAE,EAAC;;IA5B3BC,OAAA,EAAAC,QAAA,CA6BM,MAAgC,CAAhCI,UAAgC,C;IA7BtCF,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}