{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nconst __default__ = {\n  name: 'RegisterComponent'\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const name = ref('');\n    const email = ref('');\n    const password = ref('');\n    const error = ref(null);\n    const pnum = ref('');\n    const store = useStore();\n    const router = useRouter();\n    const Register = async () => {\n      try {\n        if (validatePassword(password.value)) {\n          await store.dispatch('registerUser', {\n            email: email.value,\n            password: password.value,\n            name: name.value,\n            address: address.value,\n            pcode: Pcode.value,\n            pnum: pnum.value,\n            role: 'user'\n          });\n          router.push('/');\n        } else {\n          error.value = 'Password must contain at least one non-letter and non-number character.';\n        }\n      } catch (err) {\n        error.value = err.message;\n      }\n    };\n    const validatePassword = password => {\n      // Regular expression to check for at least one non-letter and non-number character\n      const regex = /[^a-zA-Z0-9]/;\n      return regex.test(password);\n    };\n    const __returned__ = {\n      name,\n      email,\n      password,\n      error,\n      pnum,\n      store,\n      router,\n      Register,\n      validatePassword,\n      ref,\n      get useStore() {\n        return useStore;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n});","map":{"version":3,"names":["ref","useStore","useRouter","__default__","name","email","password","error","pnum","store","router","Register","validatePassword","value","dispatch","address","pcode","Pcode","role","push","err","message","regex","test"],"sources":["/Users/junyi/Documents/petadopt/src/auth/register.vue"],"sourcesContent":["<script setup>\nimport { ref } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\n\nconst name = ref('')\nconst email = ref('')\nconst password = ref('')\nconst error = ref(null)\nconst pnum = ref('')\n\nconst store = useStore()\nconst router = useRouter()\n\nconst Register = async () => {\n  try {\n    if (validatePassword(password.value)) {\n      await store.dispatch('registerUser', {\n      email: email.value,\n      password: password.value,\n      name: name.value,\n      address: address.value,\n      pcode: Pcode.value,\n      pnum: pnum.value,\n      role: 'user',\n      })\n      router.push('/')\n    }else{\n      error.value = 'Password must contain at least one non-letter and non-number character.'\n    }\n  } catch (err) {\n    error.value = err.message\n  }\n}\n\nconst validatePassword = (password) => {\n  // Regular expression to check for at least one non-letter and non-number character\n  const regex = /[^a-zA-Z0-9]/;\n  return regex.test(password);\n}\n</script>\n<template>\n  <div class=\"container\">\n    <div class=\"row justify-content-center mt-4\">\n      <div class=\"col-md-10\">\n        <div class=\"card\">\n          <div class=\"row g-0\">\n            <!-- <div class=\"col-md-5\">\n              <img class=\"img-fluid\" src=\"../../assets/images/registerPhoto.jpg\" alt=\"login photo\" style=\"height: 100%\"/>\n            </div> -->\n            <div class=\"col justify-content-center\">\n              <div class=\"card-body\">\n                <div v-if=\"error\" class=\"alert alert-danger\">{{ error }}</div>\n                <h4 class=\"card-header text-center\">Register your account</h4>\n                <br/>\n                <form action=\"#\" @submit.prevent=\"Register\">\n                  <div class=\"form-group mb-3\">\n                    <label for=\"name\" class=\"col-md-4 col-form-label\">Name<span style=\"color:red;\">*</span>:</label>\n                    <input\n                      id=\"name\"\n                      type=\"name\"\n                      class=\"form-control\"\n                      name=\"name\"\n                      value\n                      required\n                      autofocus\n                      v-model=\"name\"\n                    />\n                  </div>\n                  <br/>\n                  <div class=\"form-group mb-3\">\n                    <label for=\"email\" class=\"col-md-6 col-form-label \">Email<span style=\"color:red;\">*</span>:</label>\n                      <input\n                        id=\"email\"\n                        type=\"email\"\n                        class=\"form-control\"\n                        name=\"email\"\n                        value\n                        required\n                        autofocus\n                        v-model=\"email\"\n                      />\n                  </div>\n                  <br/>\n                  <div class=\"form-group row\">\n                    <div class=\"col-md-6\">\n                      <label for=\"pnum\" class=\"col-md-6 col-form-label \">Phone Number<span style=\"color:red;\">*</span>:</label>\n                      <input\n                        id=\"pnum\"\n                        type=\"number\"\n                        pattern=\"\\d*\"\n                        class=\"form-control\"\n                        maxlength=\"8\"\n                        name=\"pnum\"\n                        oninput=\"this.value = this.value.slice(0, 8)\"\n                        value\n                        required\n                        v-model=\"pnum\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <label for=\"password\" class=\"col-md-6 col-form-label\">Password<span style=\"color:red;\">*</span>:</label>\n                      <input\n                        id=\"password\"\n                        type=\"password\"\n                        class=\"form-control\"\n                        name=\"password\"\n                        required\n                        v-model=\"password\"\n                        @input=\"validatePassword\"\n                      />\n                    </div>\n                  </div>\n                  <br/>\n                  <div class=\"form-group row\">\n                    <div class=\"col-md-6\">\n                      <label for=\"address\" class=\"col-md-6 col-form-label\">Address<span style=\"color:red;\">*</span>:</label>\n                      <input\n                        id=\"address\"\n                        type=\"address\"\n                        class=\"form-control\"\n                        name=\"address\"\n                        required\n                        v-model=\"address\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <label for=\"Pcode\" class=\"col-md-6 col-form-label\">Postal Code<span style=\"color:red;\">*</span>:</label>\n                      <input\n                        id=\"Pcode\"\n                        type=\"number\"\n                        class=\"form-control\"\n                        pattern=\"\\d*\"\n                        name=\"Pcode\"\n                        maxlength=\"6\"\n                        oninput=\"this.value = this.value.slice(0, 6)\"\n                        required\n                        v-model=\"Pcode\"\n                      />\n                    </div>\n                  </div>\n                  <br/><br/>\n                  <div class=\"row mb-4 text-center justify-content-md-center\">\n                    <div class=\"col-5\">\n                      <button type=\"submit\" class=\"btn btn-outline-primary\">Submit</button>\n                    </div>\n\n                    <div class=\"col-4\">\n                      <router-link to=\"/auth/login\">\n                        <button role=\"link\" class=\"btn btn-outline-dark\">Cancel</button>\n                      </router-link>\n                    </div>\n                    \n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'RegisterComponent',\n}\n</script>\n"],"mappings":";AACA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,SAAS,QAAQ,YAAY;AAkKtC,MAAAC,WAAA,GAAe;EACbC,IAAI,EAAE;AACR,CAAC;;;;;;IAlKD,MAAMA,IAAI,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMK,KAAK,GAAGL,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMM,QAAQ,GAAGN,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMO,KAAK,GAAGP,GAAG,CAAC,IAAI,CAAC;IACvB,MAAMQ,IAAI,GAAGR,GAAG,CAAC,EAAE,CAAC;IAEpB,MAAMS,KAAK,GAAGR,QAAQ,CAAC,CAAC;IACxB,MAAMS,MAAM,GAAGR,SAAS,CAAC,CAAC;IAE1B,MAAMS,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,IAAIC,gBAAgB,CAACN,QAAQ,CAACO,KAAK,CAAC,EAAE;UACpC,MAAMJ,KAAK,CAACK,QAAQ,CAAC,cAAc,EAAE;YACrCT,KAAK,EAAEA,KAAK,CAACQ,KAAK;YAClBP,QAAQ,EAAEA,QAAQ,CAACO,KAAK;YACxBT,IAAI,EAAEA,IAAI,CAACS,KAAK;YAChBE,OAAO,EAAEA,OAAO,CAACF,KAAK;YACtBG,KAAK,EAAEC,KAAK,CAACJ,KAAK;YAClBL,IAAI,EAAEA,IAAI,CAACK,KAAK;YAChBK,IAAI,EAAE;UACN,CAAC,CAAC;UACFR,MAAM,CAACS,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC,MAAI;UACHZ,KAAK,CAACM,KAAK,GAAG,yEAAyE;QACzF;MACF,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZb,KAAK,CAACM,KAAK,GAAGO,GAAG,CAACC,OAAO;MAC3B;IACF,CAAC;IAED,MAAMT,gBAAgB,GAAIN,QAAQ,IAAK;MACrC;MACA,MAAMgB,KAAK,GAAG,cAAc;MAC5B,OAAOA,KAAK,CAACC,IAAI,CAACjB,QAAQ,CAAC;IAC7B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}