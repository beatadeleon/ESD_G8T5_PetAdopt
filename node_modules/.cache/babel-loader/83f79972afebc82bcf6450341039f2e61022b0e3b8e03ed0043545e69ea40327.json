{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { mapActions } from 'vuex';\nconst navigateToRegister = () => {\n  router.push('/auth/register');\n};\nconst __default__ = {\n  name: \"LoginComponent\",\n  methods: {\n    ...mapActions(['signInWithGoogle'])\n  }\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const email = ref('');\n    const password = ref('');\n    const error = ref(null);\n    const store = useStore();\n    const router = useRouter();\n    const Login = async () => {\n      try {\n        await store.dispatch('loginUser', {\n          email: email.value,\n          password: password.value\n        });\n        router.push('/');\n      } catch (err) {\n        error.value = err.message;\n      }\n    };\n\n    // const signInWithGoogle = async () => {\n    //   try {\n    //     await store.dispatch('signInWithGoogle',{\n    //       role: 'user',\n    //     });\n    //     router.push('/');\n    //   } catch (err) {\n    //     error.value = err.message;\n    //   }\n    // };\n\n    const __returned__ = {\n      navigateToRegister,\n      email,\n      password,\n      error,\n      store,\n      router,\n      Login,\n      get mapActions() {\n        return mapActions;\n      },\n      ref,\n      get useStore() {\n        return useStore;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n});","map":{"version":3,"names":["ref","useStore","useRouter","mapActions","navigateToRegister","router","push","__default__","name","methods","email","password","error","store","Login","dispatch","value","err","message"],"sources":["/Users/junyi/Documents/petadopt/src/auth/login.vue"],"sourcesContent":["<script setup>\nimport { ref } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\n\nconst email = ref('')\nconst password = ref('')\nconst error = ref(null)\n\nconst store = useStore()\nconst router = useRouter()\n\nconst Login = async () => {\n  try {\n    await store.dispatch('loginUser', {\n      email: email.value,\n      password: password.value\n    })\n    router.push('/')\n  } catch (err) {\n    error.value = err.message\n  }\n}\n\n// const signInWithGoogle = async () => {\n//   try {\n//     await store.dispatch('signInWithGoogle',{\n//       role: 'user',\n//     });\n//     router.push('/');\n//   } catch (err) {\n//     error.value = err.message;\n//   }\n// };\n</script>\n<template>\n  \n  <div class=\"container\">\n    <br/>\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-10\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <div v-if=\"error\" class=\"alert alert-danger\">{{ error }}</div>\n            <h4 class=\"card-header text-center\">Login</h4>\n            <form @submit.prevent=\"Login\">\n              <div class=\"mb-3\">\n                <label for=\"email\" class=\"col-md-5 py-2 col-form-label\">Email</label>\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  class=\"form-control\"\n                  value\n                  required\n                  autofocus\n                  v-model=\"email\"\n                />\n              </div>\n              <div class=\"mb-3\">\n                <label for=\"password\" class=\"col-md-5 py-2 col-form-label\">Password</label>\n                <input\n                  id=\"password\"\n                  type=\"password\"\n                  class=\"form-control\"\n                  required\n                  v-model=\"password\"\n                />\n              </div>\n              <br /> \n              <div class=\"row mb-4 text-center justify-content-md-center\">\n                <div class=\"col-auto\">\n                  <button type=\"submit\" class=\"btn btn-outline-primary\">Login</button>\n                </div>\n\n                <div class=\"col-auto\">\n    <button @click=\"navigateToRegister\">Register</button>\n</div>\n\n          \n                \n              </div>\n              <hr/>\n              <!-- <div class=\"row-md-4 text-center justify-content-md-center\">\n                <div class=\"col\">\n                  <a class=\"btn btn-outline-dark\" role=\"button\" style=\"text-transform:none\" @click=\"signInWithGoogle\">\n                    <i class=\"bi bi-google\"></i>\n                    Login with Google\n                  </a>\n                </div>\n              </div> -->\n            </form>\n          </div>\n        </div>\n      </div>    \n    </div>\n  </div>\n</template>\n<script>\n\n  import { mapActions } from 'vuex';\n\n  const navigateToRegister = () => {\n    router.push('/auth/register')\n  }\n  \n  export default {\n      name: \"LoginComponent\",\n      methods: {\n        ...mapActions(['signInWithGoogle']),\n      },\n  };\n</script>\n"],"mappings":";AACA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,SAAS,QAAQ,YAAY;AAgGpC,SAASC,UAAU,QAAQ,MAAM;AAEjC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC/BC,MAAM,CAACC,IAAI,CAAC,gBAAgB,CAAC;AAC/B,CAAC;AAED,MAAAC,WAAA,GAAe;EACXC,IAAI,EAAE,gBAAgB;EACtBC,OAAO,EAAE;IACP,GAAGN,UAAU,CAAC,CAAC,kBAAkB,CAAC;EACpC;AACJ,CAAC;;;;;;IAzGH,MAAMO,KAAK,GAAGV,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMW,QAAQ,GAAGX,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMY,KAAK,GAAGZ,GAAG,CAAC,IAAI,CAAC;IAEvB,MAAMa,KAAK,GAAGZ,QAAQ,CAAC,CAAC;IACxB,MAAMI,MAAM,GAAGH,SAAS,CAAC,CAAC;IAE1B,MAAMY,KAAK,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAI;QACF,MAAMD,KAAK,CAACE,QAAQ,CAAC,WAAW,EAAE;UAChCL,KAAK,EAAEA,KAAK,CAACM,KAAK;UAClBL,QAAQ,EAAEA,QAAQ,CAACK;QACrB,CAAC,CAAC;QACFX,MAAM,CAACC,IAAI,CAAC,GAAG,CAAC;MAClB,CAAC,CAAC,OAAOW,GAAG,EAAE;QACZL,KAAK,CAACI,KAAK,GAAGC,GAAG,CAACC,OAAO;MAC3B;IACF,CAAC;;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}