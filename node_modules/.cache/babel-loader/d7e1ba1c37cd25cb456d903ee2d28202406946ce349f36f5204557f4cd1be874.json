{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getCurrentScope } from 'vue';\nimport { auth, database } from '../firebaseConfig';\nimport { ref, get } from 'firebase/database';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\n// import { useDatabaseList } from 'vuefire'\n\n// const foodEvents = useDatabaseList(ref(database, \"foodEvent\"));\n// const crowdfunding = useDatabaseList(ref(database, \"crowdfundingEvent\"));\n// console.log(foodEvents)\n\nconst __default__ = {\n  data() {\n    return {\n      userRole: null,\n      store: useStore(),\n      router: useRouter(),\n      isNotificationsOpen: false,\n      currentTime: new Date().getTime()\n      // firebaseFoodEvents: foodEvents,\n      // firebaseCrowdfundEvents: crowdfunding,\n    };\n  },\n  mounted() {\n    this.fetchUserRole();\n  },\n  computed: {\n    isUser() {\n      return this.userRole === 'user';\n    },\n    isAdmin() {\n      return this.userRole === 'admin';\n    }\n  },\n  fetchUserRole() {\n    auth.onAuthStateChanged(user => {\n      const userRef = ref(database, `users/${user.uid}/role`);\n      get(userRef).then(snapshot => {\n        this.userRole = snapshot.val();\n        console.log(\"User Role from Database:\", this.userRole);\n      }).catch(error => {\n        console.error(\"Error fetching user role:\", error);\n      });\n    });\n  },\n  async signOut() {\n    await this.store.dispatch('logoutUser');\n    this.router.push('/');\n  }\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  __name: 'AppHeader',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    console.log(getCurrentScope());\n    const __returned__ = {\n      get auth() {\n        return auth;\n      },\n      get database() {\n        return database;\n      },\n      get ref() {\n        return ref;\n      },\n      get get() {\n        return get;\n      },\n      get useStore() {\n        return useStore;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      getCurrentScope\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n});","map":{"version":3,"names":["getCurrentScope","auth","database","ref","get","useStore","useRouter","__default__","data","userRole","store","router","isNotificationsOpen","currentTime","Date","getTime","mounted","fetchUserRole","computed","isUser","isAdmin","onAuthStateChanged","user","userRef","uid","then","snapshot","val","console","log","catch","error","signOut","dispatch","push"],"sources":["/Users/junyi/Documents/petadopt/src/components/AppHeader.vue"],"sourcesContent":["<script setup>\nimport { getCurrentScope} from 'vue'\n\nconsole.log(getCurrentScope())\n\n\n</script>\n\n<template>\n    <router-link v-if=\"isUser\" to=\"/dashboard\">Dashboard</router-link>\n    <router-link v-else to=\"/auth/register\">Login</router-link>\n\n\n</template>\n\n\n\n<script>\nimport { auth, database } from '../firebaseConfig';\nimport { ref, get } from 'firebase/database';\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\n// import { useDatabaseList } from 'vuefire'\n\n\n// const foodEvents = useDatabaseList(ref(database, \"foodEvent\"));\n// const crowdfunding = useDatabaseList(ref(database, \"crowdfundingEvent\"));\n// console.log(foodEvents)\n\nexport default {\n  data() {\n    return {\n      userRole: null,\n      store: useStore(),\n      router: useRouter(),\n      isNotificationsOpen: false,\n      currentTime: new Date().getTime(),\n      // firebaseFoodEvents: foodEvents,\n      // firebaseCrowdfundEvents: crowdfunding,\n    };\n  },\n  mounted() {\n    this.fetchUserRole();\n \n  },\n  computed: {\n    isUser() {\n      return this.userRole === 'user';\n    },\n    isAdmin() {\n      return this.userRole === 'admin';\n    },\n   \n  },\n\n    fetchUserRole() {\n      auth.onAuthStateChanged((user) => {\n        const userRef = ref(database, `users/${user.uid}/role`);\n        get(userRef)\n          .then((snapshot) => {\n            this.userRole = snapshot.val();\n            console.log(\"User Role from Database:\", this.userRole);\n          })\n          .catch((error) => {\n            console.error(\"Error fetching user role:\", error);\n          });\n      });\n    },\n    async signOut() {\n      await this.store.dispatch('logoutUser');\n      this.router.push('/');\n    },\n  };\n</script>\n\n\n"],"mappings":";AACA,SAASA,eAAe,QAAO,KAAK;AAiBpC,SAASC,IAAI,EAAEC,QAAQ,QAAQ,mBAAmB;AAClD,SAASC,GAAG,EAAEC,GAAG,QAAQ,mBAAmB;AAC5C,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,SAAS,QAAQ,YAAY;AACtC;;AAGA;AACA;AACA;;AAEA,MAAAC,WAAA,GAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAEL,QAAQ,CAAC,CAAC;MACjBM,MAAM,EAAEL,SAAS,CAAC,CAAC;MACnBM,mBAAmB,EAAE,KAAK;MAC1BC,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC;MAChC;MACA;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EAEtB,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACV,QAAQ,KAAK,MAAM;IACjC,CAAC;IACDW,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACX,QAAQ,KAAK,OAAO;IAClC;EAEF,CAAC;EAECQ,aAAaA,CAAA,EAAG;IACdhB,IAAI,CAACoB,kBAAkB,CAAEC,IAAI,IAAK;MAChC,MAAMC,OAAO,GAAGpB,GAAG,CAACD,QAAQ,EAAG,SAAQoB,IAAI,CAACE,GAAI,OAAM,CAAC;MACvDpB,GAAG,CAACmB,OAAO,CAAC,CACTE,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACjB,QAAQ,GAAGiB,QAAQ,CAACC,GAAG,CAAC,CAAC;QAC9BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE,IAAI,CAACpB,QAAQ,CAAC;MACxD,CAAC,CAAC,CACDqB,KAAK,CAAEC,KAAK,IAAK;QAChBH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACtB,KAAK,CAACuB,QAAQ,CAAC,YAAY,CAAC;IACvC,IAAI,CAACtB,MAAM,CAACuB,IAAI,CAAC,GAAG,CAAC;EACvB;AACF,CAAC;;;;;;;IArEHN,OAAO,CAACC,GAAG,CAAC7B,eAAe,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}